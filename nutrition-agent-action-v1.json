{
  "name": "Nutrition Agent-action",
  "type": "action",
  "counts": {
    "actions": 5,
    "intents": 2,
    "entities": 6,
    "data_types": 0,
    "collections": 0,
    "global_variables": 4
  },
  "status": "Available",
  "language": "en",
  "skill_id": "5813906b-9d79-489c-959f-3e207bbbdf6f",
  "workspace": {
    "actions": [
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_003",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I am afraid I do not understand what you are asking, let me connect you to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_003",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "No action matches"
                }
              ]
            },
            "next_step": "digression_failure"
          },
          {
            "step": "digression_failure",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Sorry I couldn't confirm if you wanted to return to previous topic."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "digression_failure",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Failed to confirm topic return"
                }
              ]
            },
            "next_step": "step_002"
          },
          {
            "step": "step_002",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Sorry I couldn't assist you. I will connect you to an agent right away."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_002",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Agent requested"
                }
              ]
            },
            "next_step": "step_004"
          },
          {
            "step": "step_004",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "It seems this conversation would be best managed by a human agent. Let me connect you to one of our agents."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_004",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Danger word detected"
                }
              ]
            },
            "next_step": "step_005"
          },
          {
            "step": "step_005",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "It seems this conversation would be best managed by a human agent. Let me connect you to one of our agents."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_005",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Profanity detected"
                }
              ]
            },
            "next_step": "step_001"
          },
          {
            "step": "step_001",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "I'm afraid I don't understand."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_001",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Step validation failed"
                }
              ]
            }
          }
        ],
        "title": "Fallback",
        "action": "fallback",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "fallback_connect_to_agent"
        },
        "variables": [
          {
            "title": "Sorry I couldn't confirm if you wanted to return to previous top",
            "privacy": {
              "enabled": false
            },
            "variable": "digression_failure",
            "data_type": "any"
          },
          {
            "title": "I'm afraid I don't understand.",
            "privacy": {
              "enabled": false
            },
            "variable": "step_001",
            "data_type": "any"
          },
          {
            "title": "Sorry I couldn't assist you. I will connect you to an agent righ",
            "variable": "step_002",
            "data_type": "any"
          },
          {
            "title": "I am afraid I do not understand what you are asking, let me conn",
            "variable": "step_003",
            "data_type": "any"
          },
          {
            "title": "It seems this conversation would be best managed",
            "variable": "step_004",
            "data_type": "any"
          },
          {
            "title": "Profanity - It seems this conversation",
            "variable": "step_005",
            "data_type": "any"
          }
        ],
        "next_action": "run_always",
        "disambiguation_opt_out": true
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "danger_word_detected",
            "type": "standard",
            "title": "Connect to agent",
            "handlers": [],
            "resolver": {
              "type": "fallback"
            },
            "variable": "danger_word_detected_variable",
            "condition": {
              "entity": "danger_words"
            },
            "next_step": "profanity_detected"
          },
          {
            "step": "profanity_detected",
            "type": "standard",
            "title": "Show warning",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Please use appropriate language when interacting with the assistant."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [
              {
                "type": "max_hits",
                "handler": "max_hits_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "max_hits": 2,
            "resolver": {
              "type": "end_action"
            },
            "variable": "profanity_detected_variable",
            "condition": {
              "entity": "profane_words"
            }
          }
        ],
        "title": "Trigger word detected",
        "action": "run_always",
        "boosts": [],
        "handlers": [],
        "variables": [
          {
            "title": "Profanity detected",
            "variable": "danger_word_detected_variable",
            "data_type": "any"
          },
          {
            "title": "Profane word detected",
            "variable": "profanity_detected_variable",
            "data_type": "any"
          }
        ],
        "next_action": "anything_else"
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_001",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I'm afraid I don't understand. Please rephrase your question."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_001",
            "condition": {
              "lte": [
                {
                  "system_variable": "no_action_matches_count"
                },
                {
                  "scalar": 3
                }
              ]
            },
            "next_step": "step_002"
          },
          {
            "step": "step_002",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": ""
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "invoke_another_action_and_end",
              "invoke_action": {
                "action": "fallback",
                "policy": "default",
                "parameters": null,
                "result_variable": "step_002_result_1",
                "ignore_end_action_steps": false
              }
            },
            "variable": "step_002",
            "condition": {
              "gt": [
                {
                  "system_variable": "no_action_matches_count"
                },
                {
                  "scalar": 3
                }
              ]
            }
          }
        ],
        "title": "No matches",
        "action": "anything_else",
        "boosts": [],
        "handlers": [],
        "condition": {
          "expression": "anything_else"
        },
        "variables": [
          {
            "title": "I am afraid I do not understand what you are asking, please re-p",
            "variable": "step_001",
            "data_type": "any"
          },
          {
            "variable": "step_002",
            "data_type": "any"
          },
          {
            "variable": "step_002_result_1",
            "data_type": "any"
          }
        ],
        "disambiguation_opt_out": true
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_872",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Welcome, How can I assist you ?"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                }
              ]
            },
            "examples": [
              {
                "input": "I need a meal plan",
                "value": "meal"
              },
              {
                "input": "I need to lose weight",
                "value": "weight"
              },
              {
                "input": "I need some nutrition",
                "value": "nutrition"
              }
            ],
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I'm sorry, I did not catch that, please restate your response."
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "free_text": true
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_872"
          }
        ],
        "title": "Greet customer",
        "action": "welcome",
        "boosts": [],
        "handlers": [],
        "condition": {
          "expression": "welcome"
        },
        "variables": [
          {
            "title": "Welcome, How can I assist you ?",
            "privacy": {
              "enabled": false
            },
            "variable": "step_872",
            "data_type": "any"
          }
        ],
        "next_action": "action_18254",
        "disambiguation_opt_out": true
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_787",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Hi there! Can I help with something ? (e.g., weight loss, muscle gain, maintaining health)"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "options": [
                    {
                      "label": "I need help with nutrition planning",
                      "value": {
                        "input": {
                          "text": "I need help with nutrition planning"
                        }
                      }
                    },
                    {
                      "label": "What should I eat today?",
                      "value": {
                        "input": {
                          "text": "What should I eat today?"
                        }
                      }
                    },
                    {
                      "label": "Create a diet plan for me",
                      "value": {
                        "input": {
                          "text": "Create a diet plan for me"
                        }
                      }
                    },
                    {
                      "label": "What should I eat to lose weight?",
                      "value": {
                        "input": {
                          "text": "What should I eat to lose weight?"
                        }
                      }
                    },
                    {
                      "label": "Help me with my diet",
                      "value": {
                        "input": {
                          "text": "Help me with my diet"
                        }
                      }
                    },
                    {
                      "label": "Suggest a meal plan for me",
                      "value": {
                        "input": {
                          "text": "Suggest a meal plan for me"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "scalar": "diet"
                  },
                  "skill_variable": "goal"
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that. Select a valid option:"
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "entity_31116",
              "max_tries": 3
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_787",
            "next_step": "step_410"
          },
          {
            "step": "step_410",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Noted. Do you have any allergies I should be aware of? (e.g., nuts, dairy, gluten)"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "scalar": "Peanut\n\nTree nuts \nalmonds\nwalnuts\ncashews\n\nMilk (dairy)\n\nEgg\n\nWheat\n\nSoy\n\nFish\n\nShellfish\n\nSesame"
                  },
                  "skill_variable": "allergies"
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I'm sorry, I did not catch that, please restate your response."
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "free_text": true
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_410",
            "next_step": "step_719"
          },
          {
            "step": "step_719",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Thanks! Do you follow any specific dietary preference? (e.g., vegetarian, vegan, keto, no preference)"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "scalar": "vegetarian\nvegan\nketo\nno preference"
                  },
                  "skill_variable": "preference"
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I'm sorry, I did not catch that, please restate your response."
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "free_text": true
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_719",
            "next_step": "step_300"
          },
          {
            "step": "step_300",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "How many meals per day do you prefer? (e.g., 3, 4, or 5)"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                }
              ]
            },
            "context": {
              "variables": []
            },
            "handlers": [
              {
                "type": "input_validation",
                "title": "input_validation_handler_1",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that. Enter a number."
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "input_validation_handler_1",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_handler",
                "input_constraints": [
                  {
                    "name": "minimum",
                    "value": {
                      "scalar": 1
                    }
                  }
                ]
              },
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that. Enter a number."
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "sys-number",
              "max_tries": 3
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_300",
            "next_step": "step_413"
          },
          {
            "step": "step_413",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Awesome! Based on your goal, and your dietary preference with allergies, I’ll generate a diet plan for you!.."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "options": [
                    {
                      "label": "Yes",
                      "value": {
                        "input": {
                          "text": "Yes"
                        }
                      }
                    },
                    {
                      "label": "No",
                      "value": {
                        "input": {
                          "text": "No"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "context": {
              "variables": []
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I'm sorry, I did not catch that, please restate your response."
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "sys-yes-no",
              "max_tries": 3,
              "response_collection_behavior": "always_ask"
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_413",
            "next_step": "step_524"
          },
          {
            "step": "step_524",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Awesome!\n\n<br />\n\n\n\nBelow are some of the meal plans for you to opt!.."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "options": [
                    {
                      "label": "Oatmeal, quinoa salad, tofu stir fry — healthy and light.",
                      "value": {
                        "input": {
                          "text": "Oatmeal, quinoa salad, tofu stir fry — healthy and light."
                        }
                      }
                    },
                    {
                      "label": "Poha, lemon rice, roti veg — light and fiber-rich.",
                      "value": {
                        "input": {
                          "text": "Poha, lemon rice, roti veg — light and fiber-rich."
                        }
                      }
                    },
                    {
                      "label": "Chilla, rice bhindi, veg pulao — gut-friendly combo.",
                      "value": {
                        "input": {
                          "text": "Chilla, rice bhindi, veg pulao — gut-friendly combo."
                        }
                      }
                    },
                    {
                      "label": "Upma, khichdi, tofu bhurji — protein-packed meals.",
                      "value": {
                        "input": {
                          "text": "Upma, khichdi, tofu bhurji — protein-packed meals."
                        }
                      }
                    },
                    {
                      "label": "Daliya, quinoa salad, dal soup — high fiber and light.",
                      "value": {
                        "input": {
                          "text": "Daliya, quinoa salad, dal soup — high fiber and light."
                        }
                      }
                    },
                    {
                      "label": "Idli, chole rice, curd rice — probiotic-rich balance.",
                      "value": {
                        "input": {
                          "text": "Idli, chole rice, curd rice — probiotic-rich balance."
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that. Select a valid option:"
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "entity_12104",
              "max_tries": 3
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_524",
            "condition": {
              "eq": [
                {
                  "variable": "step_413"
                },
                {
                  "scalar": "yes"
                }
              ]
            },
            "next_step": "step_768"
          },
          {
            "step": "step_768",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Thank you."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_768",
            "condition": {
              "eq": [
                {
                  "variable": "step_413"
                },
                {
                  "scalar": "no"
                }
              ]
            },
            "next_step": "step_257"
          },
          {
            "step": "step_257",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "### 🥣 **Breakfast: Oatmeal with Almond Milk**\n**Why it's better:**\n\n\n  - ✅ **Fiber-rich oats** help regulate digestion and blood sugar.\n  - ✅ **Almond milk** is low in saturated fat and often fortified with calcium and vitamin D.\n  - ✅ Keeps you full longer — helps avoid snacking on junk.\n\n🔬 *Nutritional edge:* Contains **beta-glucan**, a fiber that supports heart health.\n\n---"
                          },
                          {
                            "scalar": "\n### 🥗 **Lunch: Quinoa Salad with Avocado**\n**Why it's better:**\n\n\n  - ✅ **Quinoa** is a complete protein — rare in plants — and gluten-free.\n  - ✅ **Avocado** offers healthy monounsaturated fats, potassium, and fiber.\n  - ✅ **Salad base** adds hydration, vitamins, and antioxidants.\n\n🧠 *Nutritional edge:* Supports **brain health** (omega-9s + folate) and provides steady energy.\n\n---"
                          },
                          {
                            "scalar": "\n### 🍛 **Dinner: Tofu Stir Fry with Veggies**\n**Why it's better:**\n\n\n  - ✅ **Tofu** is protein-packed and rich in iron, great for muscle repair and vegetarians.\n  - ✅ **Stir-fry veggies** (broccoli, bell peppers, carrots) give you a full spread of vitamins A, C, K.\n  - ✅ Light dinner — easier on your metabolism before sleep.\n\n💪 *Nutritional edge:* Balances **protein, fiber,"
                          },
                          {
                            "scalar": " and micronutrients** without heaviness.\n\n---"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_257",
            "condition": {
              "eq": [
                {
                  "variable": "step_524"
                },
                {
                  "value": "Oatmeal, quinoa salad, tofu stir fry — healthy and light.",
                  "from_entity": "entity_12104"
                }
              ]
            },
            "next_step": "step_261"
          },
          {
            "step": "step_261",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "**Poha, lemon rice, roti veg — light and fiber-rich.**\n\n✅ **Why it's better:**\n\n\n  - **Poha** is easily digestible, rich in iron and carbs for energy.\n  - **Lemon rice** adds vitamin C and flavor with minimal oil.\n  - **Roti with mixed veg** provides whole grain + diverse micronutrients.\n→ *Ideal for busy days with low prep and high satiety.*"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_261",
            "condition": {
              "eq": [
                {
                  "variable": "step_524"
                },
                {
                  "value": "Poha, lemon rice, roti veg — light and fiber-rich.",
                  "from_entity": "entity_12104"
                }
              ]
            },
            "next_step": "step_140"
          },
          {
            "step": "step_140",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "**Chilla, rice bhindi, veg pulao — gut-friendly combo.**\n\n✅ **Why it's better:**\n\n\n  - **Moong dal chilla** is a protein-rich breakfast that’s light.\n  - **Rice, dal, bhindi** ensures balanced macros (carb, protein, fiber).\n  - **Veg pulao with raita** adds antioxidants and probiotics.\n→ *Supports digestion, muscle recovery, and energy stability.*"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_140",
            "condition": {
              "eq": [
                {
                  "variable": "step_524"
                },
                {
                  "value": "Chilla, rice bhindi, veg pulao — gut-friendly combo.",
                  "from_entity": "entity_12104"
                }
              ]
            },
            "next_step": "step_930"
          },
          {
            "step": "step_930",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "**Upma, khichdi, tofu bhurji — protein-packed meals.**\n\n✅ **Why it's better:**\n\n\n  - **Upma** is semolina-based, filling, and quick-energy food.\n  - **Khichdi with curd** is soothing and supports gut health.\n  - **Tofu bhurji** delivers plant-based protein and iron.\n→ *Good for muscle gain, low-spice days, and vegetarians.*"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_930",
            "condition": {
              "eq": [
                {
                  "variable": "step_524"
                },
                {
                  "value": "Upma, khichdi, tofu bhurji — protein-packed meals.",
                  "from_entity": "entity_12104"
                }
              ]
            },
            "next_step": "step_622"
          },
          {
            "step": "step_622",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "### 🥗 **Set 4**\n**Daliya, quinoa salad, dal soup — high fiber and light.**\n\n✅ **Why it's better:**\n\n\n  - **Daliya porridge** is low-GI, good for diabetes/weight loss.\n  - **Quinoa + moong salad** = complete protein + fiber.\n  - **Moong dal soup with toast** is protein-rich and low-fat.\n→ *Ideal for metabolic health, light digestion, and sustained energy.*"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_622",
            "condition": {
              "eq": [
                {
                  "variable": "step_524"
                },
                {
                  "value": "Daliya, quinoa salad, dal soup — high fiber and light.",
                  "from_entity": "entity_12104"
                }
              ]
            },
            "next_step": "step_242"
          },
          {
            "step": "step_242",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "### 🥗 **Set 5**\n**Idli, chole rice, curd rice — probiotic-rich balance.**\n\n✅ **Why it's better:**\n\n\n  - **Idli** is fermented, gut-friendly and non-oily.\n  - **Chole + brown rice** gives iron, protein, and complex carbs.\n  - **Curd rice** cools the body and boosts gut flora.\n→ *Balances taste, satiety, and digestion with minimum effort.*"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_242",
            "condition": {
              "eq": [
                {
                  "variable": "step_524"
                },
                {
                  "value": "Idli, chole rice, curd rice — probiotic-rich balance.",
                  "from_entity": "entity_12104"
                }
              ]
            },
            "next_step": "step_506"
          },
          {
            "step": "step_506",
            "type": "standard",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "**Thanks for chatting with Nutrition Agent! Your personalized meal plan is now ready.\nStay consistent, stay healthy — and remember, your journey matters!**\n\n**🌐 Want to explore more? Try our interactive chatbot version here:**\n[**Diet & Nutrition Advisor on Conferbot**](https://www.conferbot.com/templates/healthcare-and-wellness/66f449967307ec07881cdec9/diet-and-nutrition-"
                          },
                          {
                            "scalar": "advisor)\n\n**I’ll be here anytime you need updated suggestions or support! 💬🍽️**"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_506"
          }
        ],
        "title": "Nutrition Agent",
        "action": "action_18254",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_18254_intent_28187"
        },
        "variables": [
          {
            "title": "**Chilla, rice bhindi, veg pulao — gut-friendly combo.** ✅ **Why",
            "privacy": {
              "enabled": false
            },
            "variable": "step_140",
            "data_type": "any"
          },
          {
            "title": "### 🥗 **Set 5** **Idli, chole rice, curd rice — probiotic-rich ",
            "privacy": {
              "enabled": false
            },
            "variable": "step_242",
            "data_type": "any"
          },
          {
            "title": "### 🥣 **Breakfast: Oatmeal with Almond Milk** **Why it's better",
            "privacy": {
              "enabled": false
            },
            "variable": "step_257",
            "data_type": "any"
          },
          {
            "title": "**Poha, lemon rice, roti veg — light and fiber-rich.** ✅ **Why i",
            "privacy": {
              "enabled": false
            },
            "variable": "step_261",
            "data_type": "any"
          },
          {
            "title": "How many meals per day do you prefer? (e.g., 3, 4, or 5)",
            "privacy": {
              "enabled": false
            },
            "variable": "step_300",
            "data_type": "number"
          },
          {
            "title": "Noted. Do you have any allergies I should be aware of? (e.g., nu",
            "privacy": {
              "enabled": false
            },
            "variable": "step_410",
            "data_type": "any"
          },
          {
            "title": "Awesome! Based on your goal, and your dietary preference with al",
            "privacy": {
              "enabled": false
            },
            "variable": "step_413",
            "data_type": "yes_no"
          },
          {
            "title": "**Thanks for chatting with Nutrition Agent! Your personalized me",
            "privacy": {
              "enabled": false
            },
            "variable": "step_506",
            "data_type": "any"
          },
          {
            "title": "Awesome! <br /> Below are some of the meal plans for you to opt!",
            "privacy": {
              "enabled": false
            },
            "variable": "step_524",
            "data_type": "any"
          },
          {
            "title": "### 🥗 **Set 4** **Daliya, quinoa salad, dal soup — high fiber a",
            "privacy": {
              "enabled": false
            },
            "variable": "step_622",
            "data_type": "any"
          },
          {
            "title": "Thanks! Do you follow any specific dietary preference? (e.g., ve",
            "privacy": {
              "enabled": false
            },
            "variable": "step_719",
            "data_type": "any"
          },
          {
            "title": "Thank you.",
            "privacy": {
              "enabled": false
            },
            "variable": "step_768",
            "data_type": "any"
          },
          {
            "title": "Hi there! Can I help with something ? (e.g., weight loss, muscle",
            "privacy": {
              "enabled": false
            },
            "variable": "step_787",
            "data_type": "any"
          },
          {
            "title": "**Upma, khichdi, tofu bhurji — protein-packed meals.** ✅ **Why i",
            "privacy": {
              "enabled": false
            },
            "variable": "step_930",
            "data_type": "any"
          }
        ],
        "launch_mode": "learning",
        "next_action": "fallback",
        "display_name": "Personalized Meal Plan",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      }
    ],
    "intents": [
      {
        "intent": "action_18254_intent_28187",
        "examples": [
          {
            "text": "Hi"
          },
          {
            "text": "diet"
          },
          {
            "text": "nutrition"
          },
          {
            "text": "loose weight"
          },
          {
            "text": "gain weight"
          },
          {
            "text": "fitness"
          },
          {
            "text": "Help me with my diet?"
          },
          {
            "text": "Can you give me a healthy meal plan?"
          },
          {
            "text": "Create a diet plan for me?"
          },
          {
            "text": "What should I eat to lose weight?"
          },
          {
            "text": "What should I eat today?"
          },
          {
            "text": "What meals are good for my fitness?"
          },
          {
            "text": "I need help with nutrition planning?"
          },
          {
            "text": "meal"
          },
          {
            "text": "plan"
          }
        ]
      },
      {
        "intent": "fallback_connect_to_agent",
        "examples": [
          {
            "text": "Agent help"
          },
          {
            "text": "I would like to speak to a human"
          },
          {
            "text": "Can I connect to an agent?"
          },
          {
            "text": "I would like to speak to someone"
          },
          {
            "text": "Call agent"
          }
        ],
        "description": "Please transfer me to an agent"
      }
    ],
    "entities": [
      {
        "entity": "entity_12104",
        "values": [
          {
            "type": "synonyms",
            "value": "Idli, chole rice, curd rice — probiotic-rich balance.",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Daliya, quinoa salad, dal soup — high fiber and light.",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Oatmeal, quinoa salad, tofu stir fry — healthy and light.",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Poha, lemon rice, roti veg — light and fiber-rich.",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Chilla, rice bhindi, veg pulao — gut-friendly combo.",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Upma, khichdi, tofu bhurji — protein-packed meals.",
            "synonyms": []
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "danger_words",
        "values": [],
        "fuzzy_match": false
      },
      {
        "entity": "sys-number",
        "values": []
      },
      {
        "entity": "entity_31116",
        "values": [
          {
            "type": "synonyms",
            "value": "I need help with nutrition planning",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "What should I eat today?",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Create a diet plan for me",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "What should I eat to lose weight?",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Help me with my diet",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "Suggest a meal plan for me",
            "synonyms": []
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "profane_words",
        "values": [],
        "fuzzy_match": false
      },
      {
        "entity": "sys-yes-no",
        "values": []
      }
    ],
    "metadata": {
      "api_version": {
        "major_version": "v2",
        "minor_version": "2018-11-08"
      },
      "skill": {
        "counts": {
          "actions": 5,
          "intents": 2,
          "entities": 6,
          "data_types": 0,
          "collections": 0,
          "global_variables": 4
        }
      }
    },
    "variables": [
      {
        "title": "allergies",
        "privacy": {
          "enabled": false
        },
        "variable": "allergies",
        "data_type": "string",
        "description": ""
      },
      {
        "title": "goal",
        "privacy": {
          "enabled": false
        },
        "variable": "goal",
        "data_type": "string",
        "description": ""
      },
      {
        "title": "meals_per_day",
        "privacy": {
          "enabled": false
        },
        "variable": "meals_per_day",
        "data_type": "number",
        "description": ""
      },
      {
        "title": "preference",
        "privacy": {
          "enabled": false
        },
        "variable": "preference",
        "data_type": "string",
        "description": ""
      }
    ],
    "data_types": [],
    "collections": [],
    "counterexamples": [],
    "system_settings": {
      "nlp": {
        "model": "latest"
      },
      "variable": {
        "format": {
          "time": {
            "pattern": "short"
          },
          "currency": {
            "fraction_digits": 2
          }
        }
      },
      "off_topic": {
        "enabled": true
      },
      "auto_learn": {
        "apply": true
      },
      "launch_mode": {
        "default": "learning",
        "enabled": false,
        "learning": {
          "step_retry_threshold": 2,
          "use_connect_to_support": "more_often",
          "single_answer_clarification": "more_often",
          "disambiguation_clarification": "more_often"
        },
        "confident": {
          "step_retry_threshold": 4,
          "use_connect_to_support": "sometimes",
          "single_answer_clarification": "sometimes",
          "disambiguation_clarification": "sometimes"
        }
      },
      "topic_switch": {
        "enabled": true,
        "messages": {
          "enable_confirmation": true,
          "confirmation_failure": {
            "generic": [
              {
                "values": [
                  {
                    "text_expression": {
                      "concat": [
                        {
                          "scalar": "I'm sorry, I did not catch that, please confirm."
                        }
                      ]
                    }
                  }
                ],
                "response_type": "text",
                "selection_policy": "sequential"
              }
            ]
          },
          "confirmation_request": {
            "generic": [
              {
                "values": [
                  {
                    "text_expression": {
                      "concat": [
                        {
                          "scalar": "Do you want to continue with the previous topic: "
                        },
                        {
                          "system_variable": "digressed_from"
                        },
                        {
                          "scalar": "?"
                        }
                      ]
                    }
                  }
                ],
                "response_type": "text",
                "selection_policy": "sequential"
              },
              {
                "options": [
                  {
                    "label": "Yes",
                    "value": {
                      "input": {
                        "text": "Yes"
                      }
                    }
                  },
                  {
                    "label": "No",
                    "value": {
                      "input": {
                        "text": "No"
                      }
                    }
                  }
                ],
                "response_type": "option",
                "repeat_on_reprompt": true
              }
            ]
          }
        },
        "max_tries": 3
      },
      "generative_ai": {
        "model_id": "ibm/granite-3-8b-instruct",
        "hap_filter": {
          "output": {
            "enabled": true
          }
        },
        "slot_filling": {
          "enabled": true
        },
        "general_purpose_answering": {
          "enabled": false
        }
      },
      "disambiguation": {
        "prompt": "Did you mean:",
        "enabled": true,
        "randomize": true,
        "max_suggestions": 5,
        "suggestion_text_policy": "title",
        "none_of_the_above_prompt": "None of the above",
        "use_connect_to_support_prompt": "Connect to support",
        "single_answer_clarification_prompt": "Something else"
      },
      "search_routing": {
        "target": "conversational_search"
      },
      "spelling_auto_correct": true
    },
    "learning_opt_out": false,
    "language": "en"
  },
  "description": "created for assistant 3d141d32-e6ad-4416-912b-d74ba00e9f1d",
  "dialog_settings": {
    "source_assistant": "151564f6-1625-4fe3-b1e9-c5f823850e64"
  },
  "created": "2025-08-03T09:45:11.480Z",
  "updated": "2025-08-03T09:45:11.480Z",
  "snapshot": "1",
  "assistant_id": "3d141d32-e6ad-4416-912b-d74ba00e9f1d",
  "assistant_references": [
    {
      "name": "Nutrition Agent",
      "assistant_id": "151564f6-1625-4fe3-b1e9-c5f823850e64",
      "skill_reference": "actions skill"
    }
  ]
}